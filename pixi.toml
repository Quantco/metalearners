[project]
name = "metalearners"
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
postinstall = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."

[dependencies]
python = ">=3.10"
shap = "*"
matplotlib-base = "*"
joblib = ">=1.2.0"
scikit-learn = ">=1.4"
numpy = "*"
pandas = "*"
narwhals = ">=1.25.0,<2"
pyarrow = ">=19.0.0,<20"
# We only rely on polars in _typing.
polars = "*"

[host-dependencies]
pip = "*"
hatchling = "*"
hatch-vcs = "*"

[feature.dev.dependencies]
git_root = "*"
mypy = "*"
typing-extensions = "*"
ipykernel = "*"
ipywidgets = "*"
# lightgbm = "*"
# We have issues with version 4.6.0 when working with polars objects.
lightgbm = "4.5.0.*"
xgboost = ">=2.1.4"
lifelines = "*"
onnx = "1.17.*"
onnxmltools = "1.12.*"
skl2onnx = "1.18.*"
onnxruntime = "*"
spox = "*"
optuna = "*"
pytest = ">=6"
pytest-cov = "*"
pytest-xdist = "*"
glum = "*"
[feature.dev.tasks]
coverage = "pytest tests --cov=metalearners --cov-report=xml --cov-report term-missing --color=yes"

[feature.lint.dependencies]
pre-commit = "*"
black = "*"
ruff = "*"
prettier = "*"
insert-license-header = "*"
taplo = "*"
typos = "*"
docformatter = "*"
pre-commit-hooks = "*"

[feature.lint.tasks]
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run -a"

[feature.docs.dependencies]
make = "*"
numpydoc = "*"
sphinx = "*"
sphinx_rtd_theme = "*"
sphinxcontrib-apidoc = "*"
sphinx-autodoc-typehints = "*"
myst-nb = "*"
econml = ">=0.15"
doubleml = "*"
lime = "*"
statsmodels = "*"
nbconvert = "*"
mkdocs-jupyter = ">=0.24.8,<0.25"
mkdocs-material = ">=9.5.31,<10"
mkdocstrings = ">=0.25.2"
mkdocstrings-python = ">=1.12,<2"
griffe-inherited-docstrings = ">=1.1.1,<2"
ruff = "*"

[feature.docs.tasks]
# Postinstall task needs to be executed in 'docs' environment beforehand to resolve API references
docs = "mkdocs serve"
docs-build = "mkdocs build --strict"
readthedocs = "rm -rf $READTHEDOCS_OUTPUT/html && cp -r site/ $READTHEDOCS_OUTPUT/html"
# Notebook testing
nb-convert = "nb-convert.sh"
nb-mypy = "mypy docs/examples/*.py"
nb-assert-output = "./nb-output-check.sh"

[feature.build.dependencies]
python-build = "*"

[feature.build.tasks]
build = "python -m build"

[feature.benchmark]
platforms = ["linux-64", "osx-arm64", "osx-64"]
[feature.benchmark.dependencies]
pip = "*"
git_root = "*"
python = "3.10.*"
scikit-learn = ">=1.3"
numpy = "*"
pandas = "*"
lightgbm = "*"
econml = ">=0.15"
causalml = "*"
tabulate = "*"

[feature.benchmark.tasks]
postinstall = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."
benchmark = "python benchmarks/benchmark.py"

[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"

[environments]
default = ["dev"]
py310 = ["py310", "dev"]
py311 = ["py311", "dev"]
py312 = ["py312", "dev"]

lint = { features = ["lint"], no-default-feature = true }

docs = ["docs", "dev"]

build = ["build"]

benchmark = { features = ["benchmark"], no-default-feature = true }
